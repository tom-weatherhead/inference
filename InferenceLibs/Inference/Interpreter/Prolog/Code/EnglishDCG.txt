% EnglishDCG.txt - April 1, 2014
% A Definite Clause Grammar of a subset of the English language
% See http://www.learnprolognow.org/lpnpage.php?pagetype=html&pageid=lpn-htmlse36
% This is a Prolog2 program.
%
% (TODO:) Extend the DCG so that noun phrases can be modified by adjectives and simple prepositional phrases (that is, it should be able to handle noun phrases such as “the small frightened woman on the table” or “the big fat cow under the shower”). : Done.
% (TODO:) Further extend it so that the distinction between first, second, and third person pronouns is correctly handled (both in subject and object form). : Done.
%
% The lexicon:
%
lex(the, det(_)).
lex(a, det(singular)).
lex(table, n(singular)).
lex(cow, n(singular)).
lex(shower, n(singular)).
lex(woman, n(singular)).
lex(man, n(singular)).
lex(women, n(plural)).
lex(men, n(plural)).
lex(love, v(first, singular)).
lex(love, v(second, singular)).
lex(loves, v(third, singular)).
lex(love, v(_, plural)).
lex(i, pro(subject, first, singular)).
lex(me, pro(object, first, singular)).
lex(we, pro(subject, first, plural)).
lex(us, pro(object, first, plural)).
lex(you, pro(_, second, _)).
lex(he, pro(subject, third, singular)).
lex(she, pro(subject, third, singular)).
lex(him, pro(object, third, singular)).
lex(her, pro(object, third, singular)).
lex(they, pro(subject, third, plural)).
lex(them, pro(object, third, plural)).
lex(on, prep).
lex(under, prep).
lex(small, adj).
lex(frightened, adj).
lex(big, adj).
lex(fat, adj).
%
% The grammar:
% (X is either subject or object; Z is the person (first, second, or third); Y is either singular or plural)
s(s(NP, VP)) --> np(NP, subject, Z, Y), vp(VP, Z, Y).
np(np(DET, adjl(ADJL), N, PP), _, third, Y) --> det(DET, Y), adjl(ADJL), n(N, Y), pp(PP).
np(np(DET, adjl(ADJL), N), _, third, Y) --> det(DET, Y), adjl(ADJL), n(N, Y).
np(np(PRO), X, Z, Y) --> pro(PRO, X, Z, Y).
vp(vp(V, NP), Z, Y) --> v(V, Z, Y), np(NP, object, _, _).
vp(vp(V), Z, Y) --> v(V, Z, Y).
adjl([]) --> [].
adjl([ADJ | ADJL]) --> adj(ADJ), adjl(ADJL).
pp(pp(PREP, DET, N)) --> prep(PREP), det(DET, Y), n(N, Y).
det(det(Word), Y) --> [Word], {lex(Word, det(Y))}.
n(n(Word), Y) --> [Word], {lex(Word, n(Y))}.
v(v(Word), Z, Y) --> [Word], {lex(Word, v(Z, Y))}.
pro(pro(Word), X, Z, Y) --> [Word], {lex(Word, pro(X, Z, Y))}.
adj(adj(Word)) --> [Word], {lex(Word, adj)}.
prep(prep(Word)) --> [Word], {lex(Word, prep)}.